{"version":3,"sources":["blocks/header/Header.js","blocks/footer/Footer.js","components/button/LinkButton.js","components/button/DownloadButton.js","blocks/peopleCard/Prof.js","blocks/news/News.js","blocks/publicationTable/PublicationTable.js","blocks/experience/Exp.js","blocks/education/Edu.js","blocks/industry/Ind.js","pages/Home.js","blocks/blogMenu/BlogCell.js","blocks/blogMenu/BlogMenu.js","pages/Blog.js","pages/Thesis.js","App.js","serviceWorker.js","index.js"],"names":["Header","splitArr","window","location","href","split","_jsx","id","className","children","_jsxs","title","Footer","LinkButton","_ref","keyword","link","position","textcolor","backgroundcolor","config","DownloadButton","download","Prof","ProfData","map","item","src","img","alt","Object","keys","material","key_name","index","style","textAlign","marginTop","marginBottom","News","NewsInfoData","_Fragment","date","contents","PublicationTable","Component","constructor","props","super","onFilterChange","newFilter","publicationTable_items_name","this","grid","undefined","iso","Isotope","itemSelector","masonry","horizontalOrder","arrange","filter","bind","state","selected","list","PublicationMenuData","handleClick","i","e","preventDefault","setState","componentDidMount","render","listCount","length","key","React","Fragment","onClick","event","ref","c","PublicationItemData","category","Authors","bookTitle","Exp","ExpInfoData","Service","Talk","Teaching","Edu","EduInfoData","school","advisor","duration","Ind","IndInfoData","institution","Home","document","body","classList","add","MetaTags","charSet","rel","httpEquiv","content","name","BlogCell","url","cursor","_id","decs","year","BlogMenu","blogTable_items_name","BlogMenuData","BlogItemData","Blog","Thesis","App","Router","basename","process","Route","exact","path","component","Redirect","to","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.59400a5b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => {\r\n    const current = window.location.href;\r\n    const baseline = \"https://seungheondoh.github.io/\";\r\n    const splitArr = current.split(baseline);\r\n    return (\r\n        <header id=\"header\" className=\"site-header\">\r\n            <div className=\"wrapper d-flex justify-content-between\">\r\n                <div className=\"align-self-center\">\r\n                    <p>  </p> \r\n                </div>\r\n\r\n                <nav className=\"menu-third\">\r\n                    <ul className=\"clearfix list-unstyled\">\r\n                        <li className={ \"menu-item\" + ( splitArr[1] === '#/' ? \" current-menu-item\" : \"\" ) }>\r\n                            <a \r\n                                title=\"Home\"\r\n                                className=\"btn btn-link transform-scale-h border-0 p-0\"\r\n                                href=\"#/\">Home</a>\r\n                        </li>\r\n                        <li className={ \"menu-item\" + ( splitArr[1] === '#/blog' ? \" current-menu-item\" : \"\" ) }>\r\n                            <a \r\n                                title=\"blog\" \r\n                                className=\"btn btn-link transform-scale-h border-0 p-0\"\r\n                                href=\"#/blog\">Blog</a>\r\n                        </li>\r\n                        {/* <li className={ \"menu-item\" + ( splitArr[1] === '#/thesis' ? \" current-menu-item\" : \"\" ) }>\r\n                            <a \r\n                                title=\"thesis\" \r\n                                className=\"btn btn-link transform-scale-h border-0 p-0\"\r\n                                href=\"#/thesis\">Thesis</a>\r\n                        </li> */}\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer id=\"footer\" className=\"site-footer\">\r\n            <div className=\"wrapper no-space\">\r\n                <div className=\"row\">\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nconst LinkButton = ({keyword, link, position, textcolor, backgroundcolor}) => {\r\n    const config = `btn ${position} has-text-color ${textcolor} has-background ${backgroundcolor}`\r\n    return (\r\n            <a href={link} className={config}>\r\n                <b>{keyword}</b>\r\n            </a>\r\n    );\r\n};\r\n\r\nexport default LinkButton;\r\n","import React from 'react';\r\n\r\nconst DownloadButton = ({keyword, link, position, textcolor, backgroundcolor}) => {\r\n    const config = `btn ${position} has-text-color ${textcolor} has-background ${backgroundcolor}`\r\n    return (\r\n            <a href={link} download=\"CV_seunghenodoh\" className={config}>\r\n                <b>{keyword}</b>\r\n            </a>\r\n    );\r\n};\r\n\r\nexport default DownloadButton;\r\n","import React from 'react';\nimport LinkButton from '../../components/button/LinkButton';\nimport DownloadButton from '../../components/button/DownloadButton';\nconst Prof = ({ProfData}) => { \n    return (\n        <section id=\"page-content\" className=\"spacer\">\n            <div className=\"peoplecard\">\n                <div className=\"wrapper\">\n                    <div className=\"prof_cardwrapper\">\n                        {ProfData.map((item) => {\n                            return (\n                                <div className=\"img_div\">\n                                    <img className=\"prof_img\" src={process.env.PUBLIC_URL + `/assets/img/people/`+ item.img} alt={item.title}/>\n                                    <div className=\"info_div\">\n                                        <h4>{item.title}</h4>\n                                        <p className='p'> I'm a postdoctoral researcher at <a href='https://mac.kaist.ac.kr/'>Music and Audio Computing Lab</a>, advised by <a href=\"https://mac.kaist.ac.kr/~juhan/\">Prof. Juhan Nam</a>. <br/> \n                                        My research focuses on the machine's ability to listen to music, express music experience in natural language, and imagine visuals. A key aspect of my research lies in representation learning, particularly in bridging the gap between music and multi-modal media. Presently, my primary focus is on <b>multi-turn conversation</b> and <b>multi-modality</b>. I aim for machines to comprehend diverse modalities during conversations, particularly in the context of music generation and retrieval, facilitating the discovery of music through dialogue.\n                                        </p>\n\n                                        <div className=\"btn_div\">\n                                            <DownloadButton \n                                                keyword = \"cv\"\n                                                link= {process.env.PUBLIC_URL + `/assets/cv/CV_seungheon.pdf`}\n                                                position = \"\"\n                                                textcolor = \"has-white-color\"\n                                                backgroundcolor = \"has-olive-background-color\"\n                                            />\n                                            {Object.keys(item.material).map((key_name, index) => {\n                                                    return(\n                                                        <LinkButton \n                                                            keyword = {key_name} \n                                                            link={item.material[key_name]}\n                                                            position = \"inline\"\n                                                            textcolor = \"has-white-color\"\n                                                            backgroundcolor = \"has-gray-dark-background-color\"\n                                                        />\n                                                    );\n                                                })\n                                            }\n\n                                        </div>\n                                    </div>\n                                </div>\n                            );\n                        })}\n                    </div>\n                    <p className='p' style={{textAlign: 'center', marginTop: '25px', marginBottom: '5px'}}> <b>🔥 Plan to enter the job market at 2026 March! 🔥</b> <br/> email: seungheon.doh@gmail.com</p>\n                </div>\n            </div>\n        </section>\n    );\n};\n\nexport default Prof;\n","import React from 'react';\nimport LinkButton from '../../components/button/LinkButton';\n\nconst News = ({NewsInfoData}) => {\n    return (\n        <section id=\"page-content\" className=\"spacer p-top-lg p-bottom-lg\">\n            <div id=\"blog\">\n                <div className=\"news wrapper\">\n                    <h4>News</h4>\n                    <ul>\n                    {NewsInfoData.map((item) => {\n                        if (item.link === \"\"){\n                            return (\n                                <>\n                                    <li> {item.date} | {item.contents}</li>\n                                </>\n                            );\n                        } else {\n                            return (\n                                <>\n                                    <li> {item.date} | {item.contents} \n                                    <LinkButton keyword = \"Link\"\n                                        link={item.link}\n                                        position = \"inline\"\n                                        textcolor = \"has-white-color\"\n                                        backgroundcolor = \"has-gray-dark-background-color\"\n                                    />\n                                    </li>\n                                </>\n                            );\n                        }\n                    } ) }\n                    </ul>\n                    <hr/>\n                </div>\n            </div>\n        </section>\n    );\n};\n\nexport default News;\n","import React, { Component } from 'react';\nimport Isotope from 'isotope-layout';\nimport LinkButton from '../../components/button/LinkButton';\nimport PublicationMenuData from '../../data/publication/publicationMenu.json';\nimport PublicationItemData from '../../data/publication/publicationItems.json';\n\nclass PublicationTable extends Component {\n    constructor( props ) {\n        super( props );\n        this.onFilterChange = this.onFilterChange.bind( this );\n\n        this.state = {\n            selected: 0,\n            list: [...PublicationMenuData]\n        };\n    }\n\n    handleClick( i, e ) {\n        e.preventDefault();\n\n        this.setState( {\n            selected: i\n        } );\n\n        return false\n    }\n\n    onFilterChange = ( newFilter ) => {\n        const publicationTable_items_name = this.grid;\n        const publicationTable_item_name  = '.publicationTable-item';\n\n        if ( this.iso === undefined ) {\n            this.iso = new Isotope( publicationTable_items_name, {\n                itemSelector: publicationTable_item_name,\n                masonry: {\n                    horizontalOrder: true\n                }\n            } );\n        }\n\n        if ( newFilter === '*' ) {\n            this.iso.arrange( { filter: `*` } );\n\n        } else {\n            this.iso.arrange( { filter: `.${ newFilter }` } );\n        }\n    };\n\n    componentDidMount() {\n    }\n\n    render() {\n        const listCount = this.state.list.length - 1;\n\n        return (\n            <div className=\"publicationTable spacer p-bottom-lg\">\n                <div className=\"wrapper\">\n                    <h4>Selected Publications</h4>\n                    <ul className=\"publicationTable-filter\">\n                        { this.state.list.map( ( item, key ) => (\n                            <React.Fragment key={ key }>\n                                <li>\n                                    <span title={ item.title }\n                                       className={ \"btn btn-link transform-scale-h click\" + ( key === this.state.selected ? ' active' : '' ) }\n                                       data-filter={ item.filter }\n                                       onClick={ ( event ) => {\n                                           this.onFilterChange( item.filter );\n                                           this.handleClick( key, event )\n                                       } }>\n                                        {item.title}\n                                    </span>\n                                </li>\n\n                                { key !== listCount ?\n                                    <li>\n                                        <span className=\"btn btn-link\">-</span>\n                                    </li>\n                                    : \"\"\n                                }\n                            </React.Fragment>\n                        ) ) }\n                    </ul>\n                <div className={\"publicationTable-item-wrapper\"} >\n                    <div className=\"publicationTable-items\" ref={ ( c ) => this.grid = c }>\n                        { PublicationItemData && PublicationItemData.map( ( item, key ) => {\n                            if (item.material === \"\"){\n                                return (\n                                    <div key={ key } title={ item.title } className={ \"publicationTable-item active \" + item.category }>\n                                        <h6>{ item.title }</h6>\n                                        <p className='no-line-hight'>{ item.Authors }</p>\n                                        <p className=\"date\">{ item.bookTitle }</p>\n                                    </div>\n                                );\n                            } else {\n                                return (\n                                    <div key={ key } title={ item.title } className={ \"publicationTable-item active \" + item.category }>\n                                        <h6>{ item.title }</h6>\n                                        <p className='no-line-hight'>{ item.Authors }</p>\n                                        <p className=\"date\">{ item.bookTitle }</p>\n                                        {Object.keys(item.material).map((key_name, index) => {\n                                            if (index === 0){\n                                                return(\n                                                    <LinkButton \n                                                        keyword = {key_name} \n                                                        link={item.material[key_name]}\n                                                        position = \"\"\n                                                        textcolor = \"has-white-color\"\n                                                        backgroundcolor = \"has-gray-dark-background-color\"\n                                                    />\n                                                );\n                                            } else {\n                                                return(\n                                                    <LinkButton \n                                                        keyword = {key_name} \n                                                        link={item.material[key_name]}\n                                                        position = \"inline\"\n                                                        textcolor = \"has-white-color\"\n                                                        backgroundcolor = \"has-gray-dark-background-color\"\n                                                    />\n                                                );\n                                            }\n                                        })\n                                        }\n                                    </div>\n                                );\n                            }\n                        })}\n                    </div>\n                    <h6 className='margin'>More Publication @ <a className='active-color' href='https://scholar.google.com/citations?user=MCkggcgAAAAJ&hl=en'> Google Scholar</a> Page</h6>\n                </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PublicationTable;\n","import React from 'react';\nimport LinkButton from '../../components/button/LinkButton'\n\nconst Exp = ({ExpInfoData}) => {\n    const Service = ExpInfoData['Service']\n    const Talk = ExpInfoData['Talk']\n    const Teaching = ExpInfoData['Teaching']\n    return (\n        <section id=\"page-content\" className=\"spacer p-bottom-lg\">\n            <div id=\"blog\">\n                <div className=\"wrapper\">\n                    <h4>Service, Talk, Teaching</h4>\n                    <div className=\"experience\">\n                    <h6>Service</h6>\n                    \n                    {Service.map((item) => {\n                        if (item.link === \"\"){\n                            return (\n                                <>\n                                    <p> {item.date} | {item.contents}</p>\n                                </>\n                            );\n                        } else {\n                            return (\n                                <>\n                                    <p> {item.date} | {item.contents} \n                                        <LinkButton \n                                            keyword = \"Link\" \n                                            link={item.link}\n                                            position = \"inline\"\n                                            textcolor = \"has-white-color\"\n                                            backgroundcolor = \"has-gray-dark-background-color\"\n                                        />\n                                    </p>\n                                </>\n                            );\n                        }\n                    } ) }\n                    <h6>Talk</h6>\n                    \n                    {Talk.map((item) => {\n                        if (item.link === \"\"){\n                            return (\n                                <>\n                                    <p> {item.date} | {item.contents}</p>\n                                </>\n                            );\n                        } else {\n                            return (\n                                <>\n                                    <p> {item.date} | {item.contents} \n                                        <LinkButton \n                                            keyword = \"Link\" \n                                            link={item.link}\n                                            position = \"inline\"\n                                            textcolor = \"has-white-color\"\n                                            backgroundcolor = \"has-gray-dark-background-color\"\n                                        />\n                                    </p>\n                                </>\n                            );\n                        }\n                    } ) }\n\n                    <h6>Teaching</h6>\n                    \n                    {Teaching.map((item) => {\n                        if (item.link === \"\"){\n                            return (\n                                <>\n                                    <p> {item.date} | {item.contents}</p>\n                                </>\n                            );\n                        } else {\n                            return (\n                                <>\n                                    <p> {item.date} | {item.contents} \n                                        <LinkButton \n                                            keyword = \"Link\" \n                                            link={item.link}\n                                            position = \"inline\"\n                                            textcolor = \"has-white-color\"\n                                            backgroundcolor = \"has-gray-dark-background-color\"\n                                        />\n                                    </p>\n                                </>\n                            );\n                        }\n                    } ) }\n                    \n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n};\n\nexport default Exp;\n","import React from 'react';\n\nconst Edu = ({EduInfoData}) => { \n    return (\n        <section id=\"page-content\" className=\"spacer p-bottom-lg\">\n            <div id=\"blog\">\n                <div className=\"eduacation wrapper\">\n                    <h4>Education</h4>\n                    <div className=\"eduacation\">\n                    { EduInfoData.map((item) => {\n                            return (\n                                <>\n                                    <h6>{ item.school }</h6>\n                                    <p>{ item.position } {item.advisor !== \"\" ? (<p>{ item.advisor }</p>) : null}</p>\n                                    <p className=\"date\">{ item.duration }</p>\n                                </>\n                            );\n                        } ) }\n                        </div>\n                    </div>\n                </div>\n        </section>\n    );\n};\n\nexport default Edu;\n","import React from 'react';\n\nconst Ind = ({IndInfoData}) => { \n    return (\n        <section id=\"page-content\" className=\"spacer p-bottom-lg\">\n            <div id=\"blog\">\n                <div className=\"industry wrapper\">\n                    <h4>Experience</h4>\n                    <div className=\"eduacation\">\n                    { IndInfoData.map((item) => {\n                            return (\n                                <>\n                                    <h6>{ item.institution }</h6>\n                                    <p>\n                                        { item.position } {item.advisor !== \"\" ? (<span>{ item.advisor }</span>) : null}\n                                    </p>\n                                    <p className=\"date\">{ item.location } | { item.duration }</p>\n                                </>\n                            );\n                        } ) }\n                        </div>\n                    </div>\n                </div>\n        </section>\n    );\n};\n\nexport default Ind;\n","import React, { Fragment } from 'react';\r\nimport MetaTags from 'react-meta-tags';\r\n\r\n\r\nimport Header from '../blocks/header/Header';\r\nimport Footer from '../blocks/footer/Footer';\r\n\r\nimport Prof from '../blocks/peopleCard/Prof'\r\nimport ProfData from '../data/people/prof.json'\r\n\r\nimport News from '../blocks/news/News'\r\nimport NewsInfoData from '../data/news/newsinfo.json';\r\n\r\nimport PublicationTable from '../blocks/publicationTable/PublicationTable';\r\n\r\nimport Exp from \"../blocks/experience/Exp\"\r\nimport ExpInfoData from '../data/experiment/expInfo.json';\r\n\r\nimport Edu from \"../blocks/education/Edu\"\r\nimport EduInfoData from '../data/education/eduInfo.json';\r\n\r\nimport Ind from \"../blocks/industry/Ind\"\r\nimport IndInfoData from '../data/industry/indInfo.json';\r\n\r\nconst Home = () => {\r\n    document.body.classList.add( 'home' );\r\n    document.body.classList.add( 'bg-fixed' );\r\n    document.body.classList.add( 'bg-line' );\r\n    return (\r\n        <Fragment>\r\n            <MetaTags>\r\n                <meta charSet=\"UTF-8\" />\r\n                <title>SeungHeon Doh | MIR, ML/DL Researcher</title>\r\n                <link rel=\"icon\" href=\"data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>🎹</text></svg>\"></link>\r\n                <meta httpEquiv=\"x-ua-compatible\" content=\"ie=edge\" />\r\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\" />\r\n                <meta name=\"description\" content=\"Music informational retrieval, Machine learning, Deep learning\" />\r\n                <meta name=\"keywords\" content=\"music information retrieval, MIR, machine learning, ML, deep learning, DL, SeungHeon Doh\" />\r\n                <meta name=\"robots\" content=\"index, follow\" />\r\n                <meta name=\"googlebot\" content=\"index, follow\" />\r\n                <meta name=\"google\" content=\"notranslate\" />\r\n                <meta name=\"format-detection\" content=\"telephone=no\" />\r\n            </MetaTags>\r\n\r\n            <Header />\r\n\r\n            <main id=\"main\" className=\"site-main\">\r\n                <Prof ProfData={ProfData}/>\r\n                <News NewsInfoData = {NewsInfoData}/>\r\n                <PublicationTable/>\r\n                <Ind IndInfoData = {IndInfoData}/>\r\n                <Edu EduInfoData = {EduInfoData}/>\r\n                <Exp ExpInfoData = {ExpInfoData}/>\r\n            </main>\r\n\r\n            <Footer />\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\n\nconst BlogCell = ({item, key}) => { \n    return (\n        <section key={ key } title={ item.title } className={ \"blogTable-item active \" + item.category }>\n                <div className=\"contents_div\"> \n                    <a href={item.url} cursor=\"pointer\">\n                        <img className=\"img_div\" src={process.env.PUBLIC_URL + `/assets/blog/`+ item._id + `/thumbnail.png`} alt={item._id}/>\n                    </a>\n                    <div className=\"info_div\">\n                        <div>\n                            <h5><a href={item.url} cursor=\"pointer\">{item.title}</a></h5>\n                            <p className='desc'>{item.decs}</p>\n                        </div>\n                        <div className=\"date_div\">\n                            <p className=\"blogdate\">{item.year}</p>\n                        </div>\n                    </div>\n                </div>\n        </section>\n    );\n};\n\nexport default BlogCell;\n","import React, { Component } from 'react';\nimport Isotope from 'isotope-layout';\nimport LinkButton from '../../components/button/LinkButton';\nimport BlogMenuData from '../../data/blog/blogMenu.json';\nimport BlogItemData from '../../data/blog/blogItems.json';\nimport BlogCell from \"./BlogCell\"\n\nclass BlogMenu extends Component {\n    constructor( props ) {\n        super( props );\n        this.onFilterChange = this.onFilterChange.bind( this );\n\n        this.state = {\n            selected: 0,\n            list: BlogMenuData\n        };\n    }\n\n    handleClick( i, e ) {\n        e.preventDefault();\n\n        this.setState( {\n            selected: i\n        } );\n\n        return false\n    }\n\n    onFilterChange = ( newFilter ) => {\n        const blogTable_items_name = this.grid;\n        const blogTable_item_name  = '.blogTable-item';\n\n        if ( this.iso === undefined ) {\n            this.iso = new Isotope( blogTable_items_name, {\n                itemSelector: blogTable_item_name,\n                masonry: {\n                    horizontalOrder: true\n                }\n            } );\n        }\n\n        if ( newFilter === '*' ) {\n            this.iso.arrange( { filter: `*` } );\n\n        } else {\n            this.iso.arrange( { filter: `.${ newFilter }` } );\n        }\n    };\n\n    componentDidMount() {\n    }\n\n    render() {\n        const listCount = this.state.list.length - 1;\n\n        return (\n            <div className=\"blogTable spacer p-bottom-lg\">\n                 <div className=\"blogTable-wrapper\">\n                    <h3>Blogs</h3>\n                    <ul className=\"blogTable-filter\">\n                        { this.state.list.map( ( item, key ) => (\n                            <React.Fragment key={ key }>\n                                <li>\n                                    <span title={ item.title }\n                                       className={ \"btn btn-link transform-scale-h click\" + ( key === this.state.selected ? ' active' : '' ) }\n                                       data-filter={ item.filter }\n                                       onClick={ ( event ) => {\n                                           this.onFilterChange( item.filter );\n                                           this.handleClick( key, event )\n                                       } }>\n                                        {item.title}\n                                    </span>\n                                </li>\n\n                                { key !== listCount ?\n                                    <li>\n                                        <span className=\"btn btn-link\">-</span>\n                                    </li>\n                                    : \"\"\n                                }\n                            </React.Fragment>\n                        ) ) }\n                    </ul>\n                <div className={\"blogTable-item-wrapper\"} >\n                    <div className=\"blogTable-items\" ref={ ( c ) => this.grid = c }>\n                        { BlogItemData && BlogItemData.map( ( item, key ) => {\n                            if (item.material === \"\"){\n                                return (\n                                    <BlogCell\n                                        item = {item}\n                                        key = {key}\n                                    />\n                                );\n                            } else {\n                                return (\n                                    <BlogCell\n                                        item = {item}\n                                        key = {key}\n                                    />\n                                );\n                            }\n                        })}\n                    </div>\n                </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default BlogMenu;","import React, { Fragment } from 'react';\r\nimport MetaTags from 'react-meta-tags';\r\n\r\nimport Header from '../blocks/header/Header';\r\nimport Footer from '../blocks/footer/Footer';\r\nimport BlogMenu from '../blocks/blogMenu/BlogMenu'\r\n\r\nconst Blog = () => {\r\n    document.body.classList.add( 'blog' );\r\n    document.body.classList.add( 'bg-fixed' );\r\n    document.body.classList.add( 'bg-line' );\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaTags>\r\n                <meta charSet=\"UTF-8\" />\r\n                <title>SeungHeon Doh | MIR Researcher, ML/DL Engineer</title>\r\n                <link rel=\"icon\" href=\"data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>🎹</text></svg>\"></link>\r\n                <meta httpEquiv=\"x-ua-compatible\" content=\"ie=edge\" />\r\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n                <meta name=\"description\" content=\"\" />\r\n                <meta name=\"keywords\" content=\"\" />\r\n                <meta name=\"robots\" content=\"index, follow, noodp\" />\r\n                <meta name=\"googlebot\" content=\"index, follow\" />\r\n                <meta name=\"google\" content=\"notranslate\" />\r\n                <meta name=\"format-detection\" content=\"telephone=no\" />\r\n            </MetaTags>\r\n            <Header/>\r\n\r\n            <main id=\"main\" className=\"site-main\">\r\n                <div className=\"wrapper\">\r\n                    <BlogMenu/>\r\n                </div>\r\n            </main>\r\n\r\n            <Footer />\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Blog;\r\n","import React, { Fragment } from 'react';\r\nimport MetaTags from 'react-meta-tags';\r\n\r\nimport Header from '../blocks/header/Header';\r\nimport Footer from '../blocks/footer/Footer';\r\n\r\nconst Thesis = () => {\r\n    document.body.classList.add( 'thesis' );\r\n    document.body.classList.add( 'bg-fixed' );\r\n    document.body.classList.add( 'bg-line' );\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaTags>\r\n                <meta charSet=\"UTF-8\" />\r\n                <title>SeungHeon Doh | MIR, ML/DL Researcher</title>\r\n                <link rel=\"icon\" href=\"data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>🎹</text></svg>\"></link>\r\n                <meta httpEquiv=\"x-ua-compatible\" content=\"ie=edge\" />\r\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n                <meta name=\"description\" content=\"\" />\r\n                <meta name=\"keywords\" content=\"\" />\r\n                <meta name=\"robots\" content=\"index, follow, noodp\" />\r\n                <meta name=\"googlebot\" content=\"index, follow\" />\r\n                <meta name=\"google\" content=\"notranslate\" />\r\n                <meta name=\"format-detection\" content=\"telephone=no\" />\r\n            </MetaTags>\r\n            <Header/>\r\n\r\n            <main id=\"main\" className=\"site-main\">\r\n                <div className=\"wrapper\">\r\n                    <p>Comming Soon</p>\r\n                </div>\r\n            </main>\r\n\r\n            <Footer />\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Thesis;\r\n","import React from 'react';\nimport { HashRouter as Router, Redirect, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Blog from './pages/Blog';\nimport Thesis from './pages/Thesis';\n\nfunction App() {\n    return (\n        <Router basename={process.env.PUBLIC_URL}>\n            <Route\n                exact\n                path= \"/\"\n                component={ Home }\n            />\n            <Route\n                path= \"/blog\"\n                component={ Blog }\n            />\n            <Route\n                path= \"/thesis\"\n                component={ Thesis }\n            />\n            <Redirect to=\"/\" />\n        </Router>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './assets/sass/style.scss';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( <App />, document.getElementById( 'root' ) );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}